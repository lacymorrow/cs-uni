Extra Programs 2490

You may substitute one of these programs (provided it is correct) for any two chapter summaries. More will be added as I think of them.

1. Draw a finite state machine that accepts strings in which the number of a's mod 3 equals the number of b's mod 3. Then turn your machine into a computer program. Use the same program you used for the first programming assignment and substitute a new table and new accept state number. Some good strings in this language are Î», ab, baaaa (4 mod 3 is 1 and 1 mod 3 is 1), aaa (3 mod 3 is 0 and 0 mod 3 is 0), and aabbbbb (2 mod 3 is 2 and 5 mod 3 is 2). Hint: The correct (minimized) machine has only 3 states. Use the "submit dap xtra Prog.java" command to submit your program and then email me to tell me to grade it.

ab = 1
aabbbbb
aaabbbbbb






2. This problem comes from www.cs.princeton.edu/introcs/73fsa and is number 4 in the list of Creative Exercises. An experiment conducted by German neurologists and documented in Nature, volume 427 (2004), p. 352, hypothesizes that students who get more sleep are able to solve tricky problems better than students who are sleep deprived. The problem they used involves a string consisting of the three digits 1, 4, and 9. "Comparing" two digits that are the same yields the original digit; comparing two digits that are different yields the missing digit. For example, f(1,1) =1, f(4,4)=4, f(1,4)=9, f(9,1)=4. Compare the first two digits of the input string, and then repeatedly compare the current result with the next digit in the string. Given a specific string, what number do you end up with? For example, if the input is string 11449494, you end up with 9.
 
    1 1 4 4 9 4 9 4
      1 9 1 4 4 1 9 <- final value is
    
Implement a finite state machine that reads strings of 1, 4, and 9 and switches states according to the above description. The machine should output the final value when it gets to the end of the string. You can use a program very similar to the first program in this class except that your alphabet is {1,4,9} and you are not "accepting" strings. Instead, the last state your machine is in when a string ends determines the output value. Use the "submit dap xtra Prog.java" command to submit your program and then email me to tell me to grade it.

3. From the same webpage as number 2, read about and test the CommentStripper.java program. Then modify the finite state machine and the program so that it correctly handles quoted strings such as "/***//*". Use the "submit dap xtra Prog.java" command to submit your program and then email me to tell me to grade it.

4. Write a C++ version of our second programming assignment for the words "apple", "lemon", and "onion". See the document named "XtraWordCounting" for details. It's on the AsULearn page.